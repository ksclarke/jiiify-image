<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>jiiify-image</groupId>
  <artifactId>jiiify-image</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>jiiify-image</name>
  <description>A Java IIIF Image API Library</description>
  <url>http://projects.freelibrary.info/jiiify-image</url>

  <licenses>
    <license>
      <name>The 3-Clause BSD License</name>
      <url>https://opensource.org/licenses/BSD-3-Clause</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:ksclarke/jiiify-image.git</connection>
    <developerConnection>scm:git:git@github.com:ksclarke/jiiify-image.git</developerConnection>
    <url>git@github.com:ksclarke/jiiify-image.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ksclarke/jiiify-image/issues</url>
  </issueManagement>

  <developers>
    <developer>
      <email>ksclarke@ksclarke.io</email>
      <name>Kevin S. Clarke</name>
      <url>http://kevinclarke.info</url>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>America/New_York</timezone>
    </developer>
  </developers>

  <properties>
    <freelib-utils.version>0.8.4</freelib-utils.version>
    <twelvemonkeys.version>3.3.2</twelvemonkeys.version>
    <imgscalr.version>4.2</imgscalr.version>
    <jackson.version>2.7.4</jackson.version>
    <guava.version>23.0</guava.version>

    <!-- Test related versions -->
    <vertx.version>3.4.2</vertx.version>

    <!-- Build related versions -->
    <codacy.plugin.version>1.0.2</codacy.plugin.version>
    <maven.download.plugin.version>1.3.0</maven.download.plugin.version>
  </properties>

  <dependencies>
    <!-- Project dependencies -->
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-utils</artifactId>
      <version>${freelib-utils.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.imgscalr</groupId>
      <artifactId>imgscalr-lib</artifactId>
      <version>${imgscalr.version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-jpeg</artifactId>
      <version>${twelvemonkeys.version}</version>
    </dependency>
    <dependency>
      <groupId>com.twelvemonkeys.imageio</groupId>
      <artifactId>imageio-tiff</artifactId>
      <version>${twelvemonkeys.version}</version>
    </dependency>
    <!-- Below dependencies are only used for testing -->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <version>${vertx.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Generate our MessageCodes class from the messages resource file -->
      <!-- mvn info.freelibrary:freelib-utils:generate-codes -DmessageFiles=`ls src/main/resources/*_messages.xml` -->
      <plugin>
        <groupId>info.freelibrary</groupId>
        <artifactId>freelib-utils</artifactId>
        <version>${freelib-utils.version}</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>generate-codes</goal>
            </goals>
            <configuration>
              <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>
              <messageFiles>
                <messageFile>src/main/resources/iiif_image_messages.xml</messageFile>
              </messageFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>${maven.download.plugin.version}</version>
        <executions>
          <execution>
            <id>install-test-images</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <!-- Download some test images too large to store in GitHub -->
            <configuration>
              <url>https://s3.amazonaws.com/ksclarke-data/jiiify-image-test-images.zip</url>
              <unpack>true</unpack>
              <outputDirectory>${project.basedir}/src/test/resources/images</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <show>public</show>
          <detectLinks>false</detectLinks>
          <links>
            <link>https://google.github.io/guava/releases/23.0/api/docs/</link>
          </links>
          <sourcepath>src/main/java:src/main/generated</sourcepath>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.gavinmogan</groupId>
        <artifactId>codacy-maven-plugin</artifactId>
        <version>${codacy.plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <vertx.port>${vertx.port}</vertx.port>
            <vertx.logger-delegate-factory-class-name>io.vertx.core.logging.SLF4JLogDelegateFactory</vertx.logger-delegate-factory-class-name>
          </systemPropertyVariables>
          <argLine>${jacoco.agent.arg}</argLine>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <debuglevel>lines,source,vars</debuglevel>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>br.com.ingenieux</groupId>
        <artifactId>jbake-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <configuration>
          <portNames>
            <portName>vertx.port</portName>
          </portNames>
        </configuration>
        <executions>
          <execution>
            <id>reserve-port</id>
            <phase>initialize</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- Enables pushing project documentation up to an S3 bucket -->
  <distributionManagement>
    <site>
      <id>s3.site</id>
      <url>s3://projects.freelibrary.info/jiiify-image</url>
    </site>
  </distributionManagement>

  <!-- Pulls in standard FreeLibrary Project configuration options -->
  <parent>
    <artifactId>freelib-parent</artifactId>
    <groupId>info.freelibrary</groupId>
    <version>0.2.2</version>
  </parent>

</project>
